{"version":3,"file":"static/js/388.a29c902e.chunk.js","mappings":"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","sources":["config/constants.js","utils/security.js","components/contact/Contact.jsx"],"sourcesContent":["// Application Constants\nexport const APP_CONFIG = {\n  name: 'XOBO Delivery',\n  version: process.env.REACT_APP_VERSION || '1.0.0',\n  environment: process.env.REACT_APP_ENVIRONMENT || 'development',\n  baseUrl: process.env.PUBLIC_URL || '',\n};\n\n// Contact Information\nexport const CONTACT_INFO = {\n  phone: process.env.REACT_APP_COMPANY_PHONE || '+254799396000',\n  email: process.env.REACT_APP_COMPANY_EMAIL || 'info@xobo.co.ke',\n  whatsapp: process.env.REACT_APP_WHATSAPP_NUMBER || '254799396000',\n  address: {\n    street: 'Longonot Place, Kijabe Street',\n    city: 'Nairobi',\n    country: 'Kenya',\n    coordinates: {\n      lat: -1.275245,\n      lng: 36.816728\n    }\n  }\n};\n\n// Business URLs\nexport const EXTERNAL_URLS = {\n  businessPortal: process.env.REACT_APP_BUSINESS_PORTAL_URL || 'https://biz.xobo.co.ke/',\n  helpGuide: process.env.REACT_APP_HELP_GUIDE_URL || 'https://scribehow.com/viewer/Creating_An_Account_And_Managing_Your_Profile__bnodEkxRRriykctCzB8j7w',\n  whatsappChat: `https://api.whatsapp.com/send?phone=${CONTACT_INFO.whatsapp}`,\n  googleMaps: 'https://maps.google.com/maps?ll=-1.275245,36.816728&z=16&t=m&hl=en&gl=KE&mapclient=embed&cid=15865747215889747888'\n};\n\n// API Configuration\nexport const API_CONFIG = {\n  googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n  web3FormsAccessKey: process.env.REACT_APP_WEB3FORMS_ACCESS_KEY || '3b3b723b-5b0c-4168-9679-6acc5dfe3940',\n  web3FormsEndpoint: 'https://api.web3forms.com/submit'\n};\n\n// Navigation Links\nexport const NAV_LINKS = [\n  { name: 'Services', path: '/services', internal: true },\n  { name: 'Client Guide', path: '/client-guide', internal: true },\n  { name: 'Partner Guide', path: '/partner-guide', internal: true },\n  { name: 'Company Info', path: '/company-info', internal: true },\n  { name: 'Contact', path: '/contact', internal: true },\n  { name: 'FAQs', path: '/faq', internal: true },\n  { name: 'Help', path: EXTERNAL_URLS.helpGuide, internal: false }\n];\n\n// Service Types\nexport const SERVICES = {\n  express: {\n    name: 'Express Delivery',\n    path: '/services/express',\n    description: 'Same-day delivery service for urgent packages',\n    icon: 'FaShippingFast',\n    baseRate: 350\n  },\n  scheduled: {\n    name: 'Scheduled Delivery',\n    path: '/services/scheduled',\n    description: 'Plan your deliveries in advance',\n    icon: 'FaTruckMoving',\n    baseRate: 200\n  },\n  business: {\n    name: 'Business Solutions',\n    path: '/services/business',\n    description: 'Customized delivery solutions for businesses',\n    icon: 'FaBuilding',\n    baseRate: 500\n  }\n};\n\n// Company Statistics\nexport const COMPANY_STATS = {\n  activeRiders: '200+',\n  deliveries: '15,000+',\n  businessClients: '20+',\n  onTimeRate: '98%',\n  countiesCovered: 47\n};\n\n// Operating Hours\nexport const OPERATING_HOURS = {\n  weekdays: { start: '08:00', end: '20:00', label: 'Monday - Friday' },\n  saturday: { start: '09:00', end: '18:00', label: 'Saturday' },\n  sunday: { start: '10:00', end: '16:00', label: 'Sunday' }\n};\n\n// Social Media Links\nexport const SOCIAL_LINKS = {\n  facebook: process.env.REACT_APP_FACEBOOK_URL || '',\n  twitter: process.env.REACT_APP_TWITTER_URL || '',\n  linkedin: process.env.REACT_APP_LINKEDIN_URL || '',\n  instagram: process.env.REACT_APP_INSTAGRAM_URL || ''\n};\n\n// Form Validation Rules\nexport const VALIDATION_RULES = {\n  phone: {\n    minLength: 10,\n    maxLength: 12,\n    pattern: /^\\d{10,12}$/\n  },\n  email: {\n    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n  },\n  name: {\n    minLength: 2,\n    maxLength: 50\n  },\n  message: {\n    minLength: 10,\n    maxLength: 1000\n  }\n};\n\n// Rate Limiting\nexport const RATE_LIMITS = {\n  formSubmission: 10000, // 10 seconds between submissions\n  apiCalls: 1000 // 1 second between API calls\n};\n\n// SEO Configuration\nexport const SEO_CONFIG = {\n  defaultTitle: 'XOBO Delivery - Simple · Fast · Reliable',\n  titleTemplate: '%s | XOBO Delivery',\n  description: 'XOBO Delivery Limited offers fast, reliable delivery services across Kenya. Express delivery, scheduled shipping, and business solutions with real-time tracking.',\n  keywords: [\n    'delivery service Kenya',\n    'courier Nairobi',\n    'express delivery',\n    'scheduled delivery',\n    'business shipping',\n    'logistics Kenya',\n    'same-day delivery',\n    'XOBO Delivery'\n  ],\n  openGraph: {\n    type: 'website',\n    locale: 'en_US',\n    url: 'https://xobodeliverylimited.github.io/XOBODELIVERY.CO.KE/',\n    siteName: 'XOBO Delivery',\n    images: [\n      {\n        url: '/media/XDL-CLIENT.png',\n        width: 1200,\n        height: 630,\n        alt: 'XOBO Delivery Services'\n      }\n    ]\n  }\n};\n\n// Animation Constants\nexport const ANIMATIONS = {\n  duration: {\n    fast: 0.3,\n    normal: 0.5,\n    slow: 0.8\n  },\n  easing: 'ease-in-out',\n  carousel: {\n    autoScrollInterval: 2000,\n    transitionDuration: 500\n  }\n};\n\n// Error Messages\nexport const ERROR_MESSAGES = {\n  required: 'This field is required',\n  invalidEmail: 'Please enter a valid email address',\n  invalidPhone: 'Phone number should be between 10 and 12 digits',\n  submissionError: 'Failed to send message. Please try again.',\n  rateLimit: 'Please wait before submitting again',\n  networkError: 'Network error. Please check your connection.'\n};\n\n// Success Messages\nexport const SUCCESS_MESSAGES = {\n  formSubmitted: 'Message sent successfully!',\n  subscribed: 'Successfully subscribed to our newsletter!'\n}; ","// Security utility functions for input validation and sanitization\n\nimport { VALIDATION_RULES, RATE_LIMITS } from '../config/constants';\n\n/**\n * Sanitize HTML input to prevent XSS attacks\n * @param {string} input - The input string to sanitize\n * @returns {string} - Sanitized string\n */\nexport const sanitizeInput = (input) => {\n  if (typeof input !== 'string') return '';\n  \n  return input\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#x27;')\n    .replace(/\\//g, '&#x2F;');\n};\n\n/**\n * Validate email format\n * @param {string} email - Email to validate\n * @returns {boolean} - Whether email is valid\n */\nexport const validateEmail = (email) => {\n  if (!email || typeof email !== 'string') return false;\n  return VALIDATION_RULES.email.pattern.test(email.trim());\n};\n\n/**\n * Validate phone number format\n * @param {string} phone - Phone number to validate\n * @returns {boolean} - Whether phone is valid\n */\nexport const validatePhone = (phone) => {\n  if (!phone || typeof phone !== 'string') return false;\n  const cleanPhone = phone.replace(/\\D/g, '');\n  return cleanPhone.length >= VALIDATION_RULES.phone.minLength && \n         cleanPhone.length <= VALIDATION_RULES.phone.maxLength;\n};\n\n/**\n * Validate name format\n * @param {string} name - Name to validate\n * @returns {boolean} - Whether name is valid\n */\nexport const validateName = (name) => {\n  if (!name || typeof name !== 'string') return false;\n  const trimmedName = name.trim();\n  return trimmedName.length >= VALIDATION_RULES.name.minLength && \n         trimmedName.length <= VALIDATION_RULES.name.maxLength;\n};\n\n/**\n * Validate message format\n * @param {string} message - Message to validate\n * @returns {boolean} - Whether message is valid\n */\nexport const validateMessage = (message) => {\n  if (!message || typeof message !== 'string') return false;\n  const trimmedMessage = message.trim();\n  return trimmedMessage.length >= VALIDATION_RULES.message.minLength && \n         trimmedMessage.length <= VALIDATION_RULES.message.maxLength;\n};\n\n/**\n * Check if action is rate limited\n * @param {string} action - Action type (e.g., 'formSubmission', 'apiCall')\n * @param {string} identifier - Unique identifier (e.g., IP, user ID)\n * @returns {boolean} - Whether action is rate limited\n */\nexport const isRateLimited = (action, identifier = 'default') => {\n  const key = `${action}_${identifier}`;\n  const now = Date.now();\n  const lastActionTime = localStorage.getItem(key);\n  \n  if (!lastActionTime) {\n    localStorage.setItem(key, now.toString());\n    return false;\n  }\n  \n  const timeDiff = now - parseInt(lastActionTime);\n  const rateLimit = RATE_LIMITS[action] || 1000;\n  \n  if (timeDiff < rateLimit) {\n    return true;\n  }\n  \n  localStorage.setItem(key, now.toString());\n  return false;\n};\n\n/**\n * Generate a simple CSRF token\n * @returns {string} - CSRF token\n */\nexport const generateCSRFToken = () => {\n  return Math.random().toString(36).substring(2, 15) + \n         Math.random().toString(36).substring(2, 15);\n};\n\n/**\n * Validate form data comprehensively\n * @param {Object} formData - Form data object\n * @returns {Object} - Validation result with errors\n */\nexport const validateFormData = (formData) => {\n  const errors = {};\n  \n  // Validate first name\n  if (!validateName(formData.firstName)) {\n    errors.firstName = 'First name must be between 2 and 50 characters';\n  }\n  \n  // Validate last name\n  if (!validateName(formData.lastName)) {\n    errors.lastName = 'Last name must be between 2 and 50 characters';\n  }\n  \n  // Validate email\n  if (!validateEmail(formData.email)) {\n    errors.email = 'Please enter a valid email address';\n  }\n  \n  // Validate phone\n  if (!validatePhone(formData.phone)) {\n    errors.phone = 'Phone number should be between 10 and 12 digits';\n  }\n  \n  // Validate message\n  if (!validateMessage(formData.message)) {\n    errors.message = 'Message must be between 10 and 1000 characters';\n  }\n  \n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\n\n/**\n * Check if current environment is secure (HTTPS)\n * @returns {boolean} - Whether connection is secure\n */\nexport const isSecureConnection = () => {\n  return window.location.protocol === 'https:' || \n         window.location.hostname === 'localhost' ||\n         window.location.hostname === '127.0.0.1';\n};\n\n/**\n * Log security events for monitoring\n * @param {string} event - Event type\n * @param {Object} details - Event details\n */\nexport const logSecurityEvent = (event, details = {}) => {\n  if (process.env.NODE_ENV === 'development') {\n    console.warn('Security Event:', event, details);\n  }\n  \n  // In production, this would send to a security monitoring service\n  // Example: sendToSecurityService({ event, details, timestamp: Date.now() });\n};\n\n/**\n * Check for potential security threats in input\n * @param {string} input - Input to check\n * @returns {boolean} - Whether input contains potential threats\n */\nexport const containsSecurityThreats = (input) => {\n  if (!input || typeof input !== 'string') return false;\n  \n  const threats = [\n    /<script/i,\n    /javascript:/i,\n    /on\\w+\\s*=/i,\n    /<iframe/i,\n    /<object/i,\n    /<embed/i,\n    /eval\\s*\\(/i,\n    /expression\\s*\\(/i\n  ];\n  \n  return threats.some(threat => threat.test(input));\n};\n\nexport default {\n  sanitizeInput,\n  validateEmail,\n  validatePhone,\n  validateName,\n  validateMessage,\n  validateFormData,\n  isRateLimited,\n  generateCSRFToken,\n  isSecureConnection,\n  logSecurityEvent,\n  containsSecurityThreats\n}; ","import React, { useState, useEffect } from \"react\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/style.css\";\nimport { \n  FaPhone, \n  FaEnvelope, \n  FaWhatsapp, \n  FaMapMarkerAlt, \n  FaUser, \n  FaComments, \n  FaCheck, \n  FaClock, \n  FaShieldAlt, \n  FaStar \n} from 'react-icons/fa';\nimport { scrollToTop } from '../common/ScrollToTop';\nimport SecurityUtils from '../../utils/security';\nimport { API_CONFIG, CONTACT_INFO } from '../../config/constants';\nimport \"./contact.css\";\n\nconst Contact = () => {\n  const [result, setResult] = useState(\"Send Message\");\n  const [phone, setPhone] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  \n  // Exact coordinates for XOBO Delivery in Nairobi, Kenya\n  // These coordinates match the location provided in the Google Maps link\n  const companyLocation = { lat: -1.275245099073922, lng: 36.81672807475073 };\n\n  // Handle smooth scrolling for anchor links\n  const handleAnchorClick = (e, targetId) => {\n    e.preventDefault();\n    const element = document.getElementById(targetId);\n    if (element) {\n      element.scrollIntoView({ \n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  };\n\n  // Scroll to top when component mounts (additional safety)\n  useEffect(() => {\n    scrollToTop();\n  }, []);\n\n  const validateForm = (formData) => {\n    const formObject = {\n      firstName: formData.get(\"First Name\"),\n      lastName: formData.get(\"Last Name\"),\n      email: formData.get(\"email\"),\n      phone: phone,\n      message: formData.get(\"message\")\n    };\n\n    // Check for security threats in inputs\n    const inputs = Object.values(formObject);\n    const hasThreats = inputs.some(input => SecurityUtils.containsSecurityThreats(input));\n    \n    if (hasThreats) {\n      SecurityUtils.logSecurityEvent('Potential XSS attempt in contact form', formObject);\n      setErrors({ general: 'Invalid input detected. Please check your data.' });\n      return false;\n    }\n\n    // Use security utility for validation\n    const validation = SecurityUtils.validateFormData(formObject);\n    setErrors(validation.errors);\n    return validation.isValid;\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    // Check rate limiting first\n    if (SecurityUtils.isRateLimited('formSubmission')) {\n      setResult(\"Please wait before submitting again\");\n      return;\n    }\n\n    const formData = new FormData(event.target);\n    const selectedOption = document.getElementById(\"form-selection\").value;\n    formData.append(\"Form-Selection\", selectedOption);\n\n    if (validateForm(formData)) {\n      setResult(\"Sending....\");\n      \n      // Use configuration constants\n      formData.append(\"access_key\", API_CONFIG.web3FormsAccessKey);\n      formData.append(\"phone\", phone);\n\n      // Add security measures\n      formData.append(\"csrf_token\", SecurityUtils.generateCSRFToken());\n      formData.append(\"botcheck\", \"\"); // Honeypot field\n      formData.append(\"timestamp\", Date.now().toString());\n\n      try {\n        const res = await fetch(API_CONFIG.web3FormsEndpoint, {\n          method: \"POST\",\n          body: formData,\n          headers: {\n            'X-Requested-With': 'XMLHttpRequest'\n          }\n        }).then((res) => res.json());\n\n        if (res.success) {\n          console.log(\"Success\", res);\n          setResult(\"Message Sent Successfully!\");\n\n          // Scroll to top to show success message\n          setTimeout(() => {\n            scrollToTop('smooth');\n          }, 500);\n\n          setTimeout(() => {\n            event.target.reset();\n            setPhone(\"\");\n            setResult(\"Send Message\");\n            setErrors({});\n          }, 3000);\n        } else {\n          console.log(\"Error\", res);\n          setResult(res.message || \"An error occurred\");\n        }\n      } catch (error) {\n        console.error(\"Submission error:\", error);\n        setResult(\"Failed to send message. Please try again.\");\n        SecurityUtils.logSecurityEvent('Form submission error', { error: error.message });\n      }\n    } else {\n      setResult(\"Please correct the errors below\");\n    }\n  };\n\n  const contactBenefits = [\n    {\n      icon: <FaCheck />,\n      title: \"Quick Response\",\n      description: \"We respond to all inquiries within 24 hours\"\n    },\n    {\n      icon: <FaClock />,\n      title: \"24/7 Support\",\n      description: \"Our customer service team is available around the clock\"\n    },\n    {\n      icon: <FaShieldAlt />,\n      title: \"Secure Communication\",\n      description: \"Your information is protected with end-to-end encryption\"\n    }\n  ];\n\n  const testimonials = [\n    {\n      name: \"Jane Doe\",\n      position: \"Business Owner\",\n      quote: \"The XOBO team was incredibly responsive to my inquiries. Their support team helped me set up my delivery account quickly!\",\n      rating: 5\n    },\n    {\n      name: \"John Smith\",\n      position: \"Restaurant Manager\",\n      quote: \"I contacted XOBO with questions about their delivery service and received detailed information the same day.\",\n      rating: 5\n    }\n  ];\n\n  return (\n    <div className=\"contact-page\">\n      {/* Hero Section */}\n      <section className=\"contact-hero\">\n        <div className=\"container\">\n          <div className=\"contact-hero-content\">\n            <h1>Get in Touch</h1>\n            <p>Have questions or need assistance? We're here to help!</p>\n            <div className=\"contact-hero-buttons\">\n              <a href=\"tel:+254799396000\" className=\"hero-button primary\">\n                <FaPhone className=\"button-icon\" /> Call Us Now\n              </a>\n              <button \n                onClick={(e) => handleAnchorClick(e, 'contact-form')} \n                className=\"hero-button secondary\"\n              >\n                <FaEnvelope className=\"button-icon\" /> Send Message\n              </button>\n            </div>\n            <div className=\"hero-stats\">\n              <div className=\"stat\">\n                <strong>24h</strong>\n                <span>Response Time</span>\n              </div>\n              <div className=\"stat\">\n                <strong>24/7</strong>\n                <span>Customer Support</span>\n              </div>\n              <div className=\"stat\">\n                <strong>99%</strong>\n                <span>Customer Satisfaction</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Benefits Section */}\n      <section className=\"benefits-section\">\n        <div className=\"container\">\n          <div className=\"benefits-grid\">\n            {contactBenefits.map((benefit, index) => (\n              <div className=\"benefit-card\" key={index}>\n                <div className=\"benefit-icon\">{benefit.icon}</div>\n                <h3>{benefit.title}</h3>\n                <p>{benefit.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Contact Section */}\n      <section className=\"contact-section\" id=\"contact-form\">\n        <div className=\"container\">\n          <div className=\"section-intro\">\n            <span className=\"section-tag\">Contact Us</span>\n            <h2 className=\"section-title\">Let's Connect</h2>\n            <p className=\"section-subtitle\">\n              We're always here to help with any questions or feedback you may have\n            </p>\n          </div>\n          <div className=\"contact-grid\">\n            {/* Contact Information */}\n            <div className=\"contact-info\" id=\"contact-info\">\n              <h2>Contact Information</h2>\n              <p>Reach out to us through any of these channels for assistance or inquiries.</p>\n              \n              <div className=\"contact-methods\">\n                <div className=\"contact-method\">\n                  <div className=\"contact-icon\">\n                    <FaPhone />\n                  </div>\n                  <div className=\"contact-details\">\n                    <h3>Call Us</h3>\n                    <a href=\"tel:+254799396000\">+254 799 / 739 396 000</a>\n                  </div>\n                </div>\n                \n                <div className=\"contact-method\" id=\"email-contact\">\n                  <div className=\"contact-icon\">\n                    <FaEnvelope />\n                  </div>\n                  <div className=\"contact-details\">\n                    <h3>Email Us</h3>\n                    <a href=\"mailto:info@xobo.co.ke\">info@xobo.co.ke</a>\n                  </div>\n                </div>\n                \n                <div className=\"contact-method\">\n                  <div className=\"contact-icon\">\n                    <FaWhatsapp />\n                  </div>\n                  <div className=\"contact-details\">\n                    <h3>WhatsApp</h3>\n                    <a \n                      href=\"https://api.whatsapp.com/send?phone=254799396000\" \n                      target=\"_blank\" \n                      rel=\"noreferrer\"\n                    >\n                      +254 799 / 739 396 000\n                    </a>\n                  </div>\n                </div>\n                \n                <div className=\"contact-method\">\n                  <div className=\"contact-icon\">\n                    <FaMapMarkerAlt />\n                  </div>\n                  <div className=\"contact-details\">\n                    <h3>Visit Us</h3>\n                    <p>Nairobi, Kenya</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Operating Hours */}\n              <div className=\"operating-hours\">\n                <h3>Operating Hours</h3>\n                <ul>\n                  <li><span>Monday - Friday:</span> 8:00 AM - 8:00 PM</li>\n                  <li><span>Saturday:</span> 9:00 AM - 6:00 PM</li>\n                  <li><span>Sunday:</span> 10:00 AM - 4:00 PM</li>\n                </ul>\n              </div>\n            </div>\n\n            {/* Contact Form */}\n            <div className=\"contact-form-container\">\n              <div className=\"form-header\">\n                <h2>Send Us a Message</h2>\n                <p>Fill up the form below, and we'll get back to you as soon as possible.</p>\n              </div>\n              \n              <form onSubmit={onSubmit}>\n                <input type=\"hidden\" name=\"subject\" value=\"New Message from XOBO Website\" />\n\n                {errors.general && (\n                  <div className=\"error-message general-error\">\n                    {errors.general}\n                  </div>\n                )}\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"form-selection\">How can we help?</label>\n                  <select name=\"Form-Selection\" id=\"form-selection\">\n                    <option value=\"Customer Care\">Customer Care</option>\n                    <option value=\"Delivery Partner\">Delivery Partner</option>\n                    <option value=\"Get a Quote\">Get a Quote</option>\n                  </select>\n                </div>\n\n                <div className=\"form-row\">\n                  <div className=\"form-group\">\n                    <label htmlFor=\"firstName\">\n                      <FaUser className=\"input-icon\" /> First Name\n                    </label>\n                    <input\n                      id=\"firstName\"\n                      placeholder=\"First Name\"\n                      type=\"text\"\n                      name=\"First Name\"\n                      style={{ borderColor: errors.firstName ? \"var(--accent-color)\" : \"\" }}\n                    />\n                    {errors.firstName && (\n                      <p className=\"error-message\">{errors.firstName}</p>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <label htmlFor=\"lastName\">\n                      <FaUser className=\"input-icon\" /> Last Name\n                    </label>\n                    <input\n                      id=\"lastName\"\n                      placeholder=\"Last Name\"\n                      type=\"text\"\n                      name=\"Last Name\"\n                      style={{ borderColor: errors.lastName ? \"var(--accent-color)\" : \"\" }}\n                    />\n                    {errors.lastName && (\n                      <p className=\"error-message\">{errors.lastName}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"phoneNumber\">\n                    <FaPhone className=\"input-icon\" /> Phone Number\n                  </label>\n                  <PhoneInput\n                    className=\"phone-input\"\n                    country={\"ke\"}\n                    id=\"phoneNumber\"\n                    onlyCountries={[\"ke\"]}\n                    placeholder=\"+254 712 345 678\"\n                    value={phone}\n                    onChange={setPhone}\n                    inputStyle={{\n                      borderColor: errors.phone ? \"var(--accent-color)\" : \"\",\n                      width: \"100%\",\n                      height: \"48px\",\n                    }}\n                    buttonStyle={{\n                      border: \"none\",\n                      background: \"transparent\",\n                    }}\n                    required\n                  />\n                  {errors.phone && (\n                    <p className=\"error-message\">{errors.phone}</p>\n                  )}\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">\n                    <FaEnvelope className=\"input-icon\" /> Email\n                  </label>\n                  <input\n                    id=\"email\"\n                    placeholder=\"Email Address\"\n                    type=\"email\"\n                    name=\"email\"\n                    style={{ borderColor: errors.email ? \"var(--accent-color)\" : \"\" }}\n                  />\n                  {errors.email && (\n                    <p className=\"error-message\">{errors.email}</p>\n                  )}\n                </div>\n\n                <div className=\"form-group message-group\">\n                  <label htmlFor=\"message\">\n                    <FaComments className=\"input-icon\" /> Message\n                  </label>\n                  <textarea\n                    id=\"message\"\n                    placeholder=\"Type your message here...\"\n                    name=\"message\"\n                    rows=\"5\"\n                    style={{ borderColor: errors.message ? \"var(--accent-color)\" : \"\" }}\n                  ></textarea>\n                  {errors.message && (\n                    <p className=\"error-message\">{errors.message}</p>\n                  )}\n                </div>\n\n                <button type=\"submit\" className=\"submit-button\">{result}</button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonial Section */}\n      <section className=\"testimonial-section\">\n        <div className=\"container\">\n          <div className=\"section-intro\">\n            <span className=\"section-tag\">Testimonials</span>\n            <h2 className=\"section-title\">What Our Customers Say</h2>\n            <p className=\"section-subtitle\">Hear from people who have contacted us and received outstanding support</p>\n          </div>\n          \n          <div className=\"testimonial-grid\">\n            {testimonials.map((testimonial, index) => (\n              <div className=\"testimonial-card\" key={index}>\n                <div className=\"testimonial-content\">\n                  <div className=\"testimonial-rating\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <FaStar key={i} />\n                    ))}\n                  </div>\n                  <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\n                  <div className=\"testimonial-author\">\n                    <div className=\"author-avatar\">\n                      {testimonial.name.charAt(0)}\n                    </div>\n                    <div className=\"author-info\">\n                      <h4>{testimonial.name}</h4>\n                      <p>{testimonial.position}</p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Location Section */}\n      <section className=\"location-section\">\n        <div className=\"container\">\n          <div className=\"section-intro\">\n            <span className=\"section-tag\">LOCATION</span>\n            <h2 className=\"section-title\">Find Us</h2>\n            <p className=\"section-subtitle\">\n              XOBO Delivery is conveniently located in Nairobi, Kenya\n            </p>\n          </div>\n          \n          <div className=\"map-container\">\n            <iframe\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3988.8172470332807!2d36.81421937363526!3d-1.2752359357850815!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x182f170e44a13747%3A0xdc0b4b85b24f27b0!2sXobo%20Delivery%20Limited!5e0!3m2!1sen!2ske!4v1714158394906!5m2!1sen!2ske\"\n              width=\"100%\"\n              height=\"100%\"\n              style={{ border: 0 }}\n              allowFullScreen=\"\"\n              loading=\"lazy\"\n              referrerPolicy=\"no-referrer-when-downgrade\"\n              title=\"XOBO Delivery Office Location\"\n            ></iframe>\n          </div>\n          \n          <div className=\"location-info\">\n            <p>Our office is located at the marker shown on the map</p>\n            <a \n              href=\"https://maps.google.com/maps?ll=-1.275245,36.816728&z=16&t=m&hl=en&gl=KE&mapclient=embed&cid=15865747215889747888\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"map-link\"\n            >\n              <FaMapMarkerAlt /> Open in Google Maps\n            </a>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"testimonials-section\">\n        <div className=\"container\">\n          <div className=\"section-intro\">\n            <span className=\"section-tag\">TESTIMONIALS</span>\n            <h2 className=\"section-title\">What Our Clients Say</h2>\n            <p className=\"section-subtitle\">\n              Hear from businesses and individuals who have experienced our services\n            </p>\n          </div>\n          \n          <div className=\"testimonials-container\">\n            {testimonials.map((testimonial, index) => (\n              <div className=\"testimonial-card\" key={index}>\n                <div className=\"testimonial-rating\">\n                  {[...Array(testimonial.rating)].map((_, i) => (\n                    <FaStar key={i} />\n                  ))}\n                </div>\n                <div className=\"testimonial-text\">\n                  \"{testimonial.quote}\"\n                </div>\n                <div className=\"testimonial-author\">\n                  <div className=\"testimonial-avatar\">\n                    {testimonial.name.split(' ').map(n => n[0]).join('')}\n                  </div>\n                  <div className=\"testimonial-info\">\n                    <h4>{testimonial.name}</h4>\n                    <p>{testimonial.position}</p>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Contact;\n"],"names":["concat","phone","process","REACT_APP_COMPANY_PHONE","email","REACT_APP_COMPANY_EMAIL","whatsapp","REACT_APP_WHATSAPP_NUMBER","address","street","city","country","coordinates","lat","lng","API_CONFIG","googleMapsApiKey","REACT_APP_GOOGLE_MAPS_API_KEY","web3FormsAccessKey","REACT_APP_WEB3FORMS_ACCESS_KEY","web3FormsEndpoint","VALIDATION_RULES","minLength","maxLength","pattern","name","message","RATE_LIMITS","formSubmission","apiCalls","validateEmail","test","trim","validatePhone","cleanPhone","replace","length","validateName","trimmedName","validateMessage","trimmedMessage","formData","errors","firstName","lastName","isValid","Object","keys","action","identifier","arguments","undefined","key","now","Date","lastActionTime","localStorage","getItem","setItem","toString","parseInt","generateCSRFToken","Math","random","substring","event","input","some","threat","Contact","result","setResult","useState","setPhone","setErrors","useEffect","scrollToTop","contactBenefits","icon","_jsx","FaCheck","title","description","FaClock","FaShieldAlt","testimonials","position","quote","rating","_jsxs","className","children","href","FaPhone","onClick","e","handleAnchorClick","targetId","preventDefault","element","document","getElementById","scrollIntoView","behavior","block","FaEnvelope","map","benefit","index","id","FaWhatsapp","target","rel","FaMapMarkerAlt","onSubmit","async","SecurityUtils","FormData","selectedOption","value","append","formObject","get","values","general","validation","validateForm","res","fetch","method","body","headers","then","json","success","console","log","setTimeout","reset","error","type","htmlFor","FaUser","placeholder","style","borderColor","PhoneInput","onlyCountries","onChange","inputStyle","width","height","buttonStyle","border","background","required","FaComments","rows","testimonial","Array","_","i","FaStar","charAt","src","allowFullScreen","loading","referrerPolicy","split","n","join"],"sourceRoot":""}