{"version":3,"file":"static/js/388.7a7624c6.chunk.js","mappings":"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","sources":["config/constants.js","utils/security.js","components/contact/Contact.jsx","utils/logger.js"],"sourcesContent":["// Application Constants\r\nexport const APP_CONFIG = {\r\n  name: 'XOBO Delivery',\r\n  version: process.env.REACT_APP_VERSION || '1.0.0',\r\n  environment: process.env.REACT_APP_ENVIRONMENT || 'development',\r\n  baseUrl: process.env.PUBLIC_URL || '',\r\n};\r\n\r\n// Contact Information\r\nexport const CONTACT_INFO = {\r\n  phone: process.env.REACT_APP_COMPANY_PHONE || '+254799396000',\r\n  email: process.env.REACT_APP_COMPANY_EMAIL || 'info@xobo.co.ke',\r\n  whatsapp: process.env.REACT_APP_WHATSAPP_NUMBER || '254799396000',\r\n  address: {\r\n    street: 'Longonot Place, Kijabe Street',\r\n    city: 'Nairobi',\r\n    country: 'Kenya',\r\n    coordinates: {\r\n      lat: -1.275245,\r\n      lng: 36.816728\r\n    }\r\n  }\r\n};\r\n\r\n// Business URLs\r\nexport const EXTERNAL_URLS = {\r\n  businessPortal: process.env.REACT_APP_BUSINESS_PORTAL_URL || 'https://biz.xobo.co.ke/',\r\n  helpGuide: process.env.REACT_APP_HELP_GUIDE_URL || 'https://scribehow.com/viewer/Creating_An_Account_And_Managing_Your_Profile__bnodEkxRRriykctCzB8j7w',\r\n  whatsappChat: `https://api.whatsapp.com/send?phone=${CONTACT_INFO.whatsapp}`,\r\n  googleMaps: 'https://maps.google.com/maps?ll=-1.275245,36.816728&z=16&t=m&hl=en&gl=KE&mapclient=embed&cid=15865747215889747888'\r\n};\r\n\r\n// API Configuration\r\nexport const API_CONFIG = {\r\n  googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n  web3FormsAccessKey: process.env.REACT_APP_WEB3FORMS_ACCESS_KEY || '3b3b723b-5b0c-4168-9679-6acc5dfe3940',\r\n  web3FormsEndpoint: 'https://api.web3forms.com/submit'\r\n};\r\n\r\n// Navigation Links\r\nexport const NAV_LINKS = [\r\n  { name: 'Services', path: '/services', internal: true },\r\n  { name: 'Client Guide', path: '/client-guide', internal: true },\r\n  { name: 'Company Info', path: '/company-info', internal: true },\r\n  { name: 'Contact', path: '/contact', internal: true },\r\n  { name: 'FAQs', path: '/faq', internal: true },\r\n  { name: 'Help', path: EXTERNAL_URLS.helpGuide, internal: false }\r\n];\r\n\r\n// Service Types\r\nexport const SERVICES = {\r\n  express: {\r\n    name: 'Express Delivery',\r\n    path: '/services/express',\r\n    description: 'Same-day delivery service for urgent packages',\r\n    icon: 'FaShippingFast',\r\n    baseRate: 350\r\n  },\r\n  scheduled: {\r\n    name: 'Scheduled Delivery',\r\n    path: '/services/scheduled',\r\n    description: 'Plan your deliveries in advance',\r\n    icon: 'FaTruckMoving',\r\n    baseRate: 200\r\n  },\r\n  business: {\r\n    name: 'Business Solutions',\r\n    path: '/services/business',\r\n    description: 'Customized delivery solutions for businesses',\r\n    icon: 'FaBuilding',\r\n    baseRate: 500\r\n  }\r\n};\r\n\r\n// Company Statistics\r\nexport const COMPANY_STATS = {\r\n  activeRiders: '200+',\r\n  deliveries: '15,000+',\r\n  businessClients: '20+',\r\n  onTimeRate: '98%',\r\n  countiesCovered: 47\r\n};\r\n\r\n// Operating Hours\r\nexport const OPERATING_HOURS = {\r\n  weekdays: { start: '08:00', end: '20:00', label: 'Monday - Friday' },\r\n  saturday: { start: '09:00', end: '18:00', label: 'Saturday' },\r\n  sunday: { start: '10:00', end: '16:00', label: 'Sunday' }\r\n};\r\n\r\n// Social Media Links\r\nexport const SOCIAL_LINKS = {\r\n  facebook: process.env.REACT_APP_FACEBOOK_URL || '',\r\n  twitter: process.env.REACT_APP_TWITTER_URL || '',\r\n  linkedin: process.env.REACT_APP_LINKEDIN_URL || '',\r\n  instagram: process.env.REACT_APP_INSTAGRAM_URL || ''\r\n};\r\n\r\n// Form Validation Rules\r\nexport const VALIDATION_RULES = {\r\n  phone: {\r\n    minLength: 10,\r\n    maxLength: 12,\r\n    pattern: /^\\d{10,12}$/\r\n  },\r\n  email: {\r\n    pattern: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\r\n  },\r\n  name: {\r\n    minLength: 2,\r\n    maxLength: 50\r\n  },\r\n  message: {\r\n    minLength: 10,\r\n    maxLength: 1000\r\n  }\r\n};\r\n\r\n// Rate Limiting\r\nexport const RATE_LIMITS = {\r\n  formSubmission: 10000, // 10 seconds between submissions\r\n  apiCalls: 1000 // 1 second between API calls\r\n};\r\n\r\n// SEO Configuration\r\nexport const SEO_CONFIG = {\r\n  defaultTitle: 'XOBO Delivery - Simple · Fast · Reliable',\r\n  titleTemplate: '%s | XOBO Delivery',\r\n  description: 'XOBO Delivery Limited offers fast, reliable delivery services across Kenya. Express delivery, scheduled shipping, and business solutions with real-time tracking.',\r\n  keywords: [\r\n    'delivery service Kenya',\r\n    'courier Nairobi',\r\n    'express delivery',\r\n    'scheduled delivery',\r\n    'business shipping',\r\n    'logistics Kenya',\r\n    'same-day delivery',\r\n    'XOBO Delivery'\r\n  ],\r\n  openGraph: {\r\n    type: 'website',\r\n    locale: 'en_US',\r\n    url: 'https://xobodeliverylimited.github.io/XOBODELIVERY.CO.KE/',\r\n    siteName: 'XOBO Delivery',\r\n    images: [\r\n      {\r\n        url: '/media/XDL-CLIENT.png',\r\n        width: 1200,\r\n        height: 630,\r\n        alt: 'XOBO Delivery Services'\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n// Animation Constants\r\nexport const ANIMATIONS = {\r\n  duration: {\r\n    fast: 0.3,\r\n    normal: 0.5,\r\n    slow: 0.8\r\n  },\r\n  easing: 'ease-in-out',\r\n  carousel: {\r\n    autoScrollInterval: 2000,\r\n    transitionDuration: 500\r\n  }\r\n};\r\n\r\n// Error Messages\r\nexport const ERROR_MESSAGES = {\r\n  required: 'This field is required',\r\n  invalidEmail: 'Please enter a valid email address',\r\n  invalidPhone: 'Phone number should be between 10 and 12 digits',\r\n  submissionError: 'Failed to send message. Please try again.',\r\n  rateLimit: 'Please wait before submitting again',\r\n  networkError: 'Network error. Please check your connection.'\r\n};\r\n\r\n// Success Messages\r\nexport const SUCCESS_MESSAGES = {\r\n  formSubmitted: 'Message sent successfully!',\r\n  subscribed: 'Successfully subscribed to our newsletter!'\r\n};\r\n\r\n// XOBO Delivery - Responsive Design Constants\r\n// Standardized breakpoints for consistent responsive design\r\n\r\nexport const BREAKPOINTS = {\r\n  // Screen size categories\r\n  MOBILE_XS: 320,   // Extra small mobile devices\r\n  MOBILE_SM: 375,   // Small mobile devices (iPhone SE, etc.)\r\n  MOBILE_MD: 480,   // Medium mobile devices\r\n  MOBILE_LG: 576,   // Large mobile devices\r\n  TABLET_SM: 768,   // Small tablets and large mobile landscape\r\n  TABLET_LG: 992,   // Large tablets\r\n  DESKTOP_SM: 1200, // Small desktop screens\r\n  DESKTOP_MD: 1440, // Medium desktop screens\r\n  DESKTOP_LG: 1920, // Large desktop screens\r\n};\r\n\r\n// Media query breakpoints (max-width)\r\nexport const MEDIA_QUERIES = {\r\n  MOBILE_XS: `(max-width: ${BREAKPOINTS.MOBILE_XS}px)`,\r\n  MOBILE_SM: `(max-width: ${BREAKPOINTS.MOBILE_SM}px)`,\r\n  MOBILE_MD: `(max-width: ${BREAKPOINTS.MOBILE_MD}px)`,\r\n  MOBILE_LG: `(max-width: ${BREAKPOINTS.MOBILE_LG}px)`,\r\n  TABLET_SM: `(max-width: ${BREAKPOINTS.TABLET_SM}px)`,\r\n  TABLET_LG: `(max-width: ${BREAKPOINTS.TABLET_LG}px)`,\r\n  DESKTOP_SM: `(max-width: ${BREAKPOINTS.DESKTOP_SM}px)`,\r\n  DESKTOP_MD: `(max-width: ${BREAKPOINTS.DESKTOP_MD}px)`,\r\n  DESKTOP_LG: `(max-width: ${BREAKPOINTS.DESKTOP_LG}px)`,\r\n};\r\n\r\n// Touch device detection\r\nexport const TOUCH_QUERIES = {\r\n  TOUCH_DEVICE: '(hover: none) and (pointer: coarse)',\r\n  MOUSE_DEVICE: '(hover: hover) and (pointer: fine)',\r\n};\r\n\r\n// Safe area constants for notched devices\r\nexport const SAFE_AREAS = {\r\n  TOP: 'env(safe-area-inset-top, 0px)',\r\n  BOTTOM: 'env(safe-area-inset-bottom, 0px)',\r\n  LEFT: 'env(safe-area-inset-left, 0px)',\r\n  RIGHT: 'env(safe-area-inset-right, 0px)',\r\n}; ","// Security utility functions for input validation and sanitization\r\n\r\nimport { VALIDATION_RULES, RATE_LIMITS } from '../config/constants';\r\n\r\n/**\r\n * Sanitize HTML input to prevent XSS attacks\r\n * @param {string} input - The input string to sanitize\r\n * @returns {string} - Sanitized string\r\n */\r\nexport const sanitizeInput = (input) => {\r\n  if (typeof input !== 'string') return '';\r\n  \r\n  return input\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#x27;')\r\n    .replace(/\\//g, '&#x2F;');\r\n};\r\n\r\n/**\r\n * Validate email format\r\n * @param {string} email - Email to validate\r\n * @returns {boolean} - Whether email is valid\r\n */\r\nexport const validateEmail = (email) => {\r\n  if (!email || typeof email !== 'string') return false;\r\n  return VALIDATION_RULES.email.pattern.test(email.trim());\r\n};\r\n\r\n/**\r\n * Validate phone number format\r\n * @param {string} phone - Phone number to validate\r\n * @returns {boolean} - Whether phone is valid\r\n */\r\nexport const validatePhone = (phone) => {\r\n  if (!phone || typeof phone !== 'string') return false;\r\n  const cleanPhone = phone.replace(/\\D/g, '');\r\n  return cleanPhone.length >= VALIDATION_RULES.phone.minLength && \r\n         cleanPhone.length <= VALIDATION_RULES.phone.maxLength;\r\n};\r\n\r\n/**\r\n * Validate name format\r\n * @param {string} name - Name to validate\r\n * @returns {boolean} - Whether name is valid\r\n */\r\nexport const validateName = (name) => {\r\n  if (!name || typeof name !== 'string') return false;\r\n  const trimmedName = name.trim();\r\n  return trimmedName.length >= VALIDATION_RULES.name.minLength && \r\n         trimmedName.length <= VALIDATION_RULES.name.maxLength;\r\n};\r\n\r\n/**\r\n * Validate message format\r\n * @param {string} message - Message to validate\r\n * @returns {boolean} - Whether message is valid\r\n */\r\nexport const validateMessage = (message) => {\r\n  if (!message || typeof message !== 'string') return false;\r\n  const trimmedMessage = message.trim();\r\n  return trimmedMessage.length >= VALIDATION_RULES.message.minLength && \r\n         trimmedMessage.length <= VALIDATION_RULES.message.maxLength;\r\n};\r\n\r\n/**\r\n * Check if action is rate limited\r\n * @param {string} action - Action type (e.g., 'formSubmission', 'apiCall')\r\n * @param {string} identifier - Unique identifier (e.g., IP, user ID)\r\n * @returns {boolean} - Whether action is rate limited\r\n */\r\nexport const isRateLimited = (action, identifier = 'default') => {\r\n  const key = `${action}_${identifier}`;\r\n  const now = Date.now();\r\n  const lastActionTime = localStorage.getItem(key);\r\n  \r\n  if (!lastActionTime) {\r\n    localStorage.setItem(key, now.toString());\r\n    return false;\r\n  }\r\n  \r\n  const timeDiff = now - parseInt(lastActionTime);\r\n  const rateLimit = RATE_LIMITS[action] || 1000;\r\n  \r\n  if (timeDiff < rateLimit) {\r\n    return true;\r\n  }\r\n  \r\n  localStorage.setItem(key, now.toString());\r\n  return false;\r\n};\r\n\r\n/**\r\n * Generate a simple CSRF token\r\n * @returns {string} - CSRF token\r\n */\r\nexport const generateCSRFToken = () => {\r\n  return Math.random().toString(36).substring(2, 15) + \r\n         Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\n/**\r\n * Validate form data comprehensively\r\n * @param {Object} formData - Form data object\r\n * @returns {Object} - Validation result with errors\r\n */\r\nexport const validateFormData = (formData) => {\r\n  const errors = {};\r\n  \r\n  // Validate first name\r\n  if (!validateName(formData.firstName)) {\r\n    errors.firstName = 'First name must be between 2 and 50 characters';\r\n  }\r\n  \r\n  // Validate last name\r\n  if (!validateName(formData.lastName)) {\r\n    errors.lastName = 'Last name must be between 2 and 50 characters';\r\n  }\r\n  \r\n  // Validate email\r\n  if (!validateEmail(formData.email)) {\r\n    errors.email = 'Please enter a valid email address';\r\n  }\r\n  \r\n  // Validate phone\r\n  if (!validatePhone(formData.phone)) {\r\n    errors.phone = 'Phone number should be between 10 and 12 digits';\r\n  }\r\n  \r\n  // Validate message\r\n  if (!validateMessage(formData.message)) {\r\n    errors.message = 'Message must be between 10 and 1000 characters';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Check if current environment is secure (HTTPS)\r\n * @returns {boolean} - Whether connection is secure\r\n */\r\nexport const isSecureConnection = () => {\r\n  return window.location.protocol === 'https:' || \r\n         window.location.hostname === 'localhost' ||\r\n         window.location.hostname === '127.0.0.1';\r\n};\r\n\r\n/**\r\n * Log security events for monitoring\r\n * @param {string} event - Event type\r\n * @param {Object} details - Event details\r\n */\r\nexport const logSecurityEvent = (event, details = {}) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.warn('Security Event:', event, details);\r\n  }\r\n  \r\n  // In production, this would send to a security monitoring service\r\n  // Example: sendToSecurityService({ event, details, timestamp: Date.now() });\r\n};\r\n\r\n/**\r\n * Check for potential security threats in input\r\n * @param {string} input - Input to check\r\n * @returns {boolean} - Whether input contains potential threats\r\n */\r\nexport const containsSecurityThreats = (input) => {\r\n  if (!input || typeof input !== 'string') return false;\r\n  \r\n  const threats = [\r\n    /<script/i,\r\n    /javascript:/i,\r\n    /on\\w+\\s*=/i,\r\n    /<iframe/i,\r\n    /<object/i,\r\n    /<embed/i,\r\n    /eval\\s*\\(/i,\r\n    /expression\\s*\\(/i\r\n  ];\r\n  \r\n  return threats.some(threat => threat.test(input));\r\n};\r\n\r\nconst SecurityUtils = {\r\n  sanitizeInput,\r\n  validateEmail,\r\n  validatePhone,\r\n  validateName,\r\n  validateMessage,\r\n  validateFormData,\r\n  isRateLimited,\r\n  generateCSRFToken,\r\n  isSecureConnection,\r\n  logSecurityEvent,\r\n  containsSecurityThreats\r\n};\r\n\r\nexport default SecurityUtils; ","import React, { useState, useEffect } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { \r\n  FaPhone, \r\n  FaEnvelope, \r\n  FaWhatsapp, \r\n  FaMapMarkerAlt, \r\n  FaUser, \r\n  FaComments, \r\n  FaCheck, \r\n  FaClock, \r\n  FaShieldAlt\r\n} from 'react-icons/fa';\r\nimport { scrollToTop } from '../common/ScrollToTop';\r\nimport SecurityUtils from '../../utils/security';\r\nimport { API_CONFIG } from '../../config/constants';\r\nimport logger from '../../utils/logger';\r\nimport \"./contact.css\";\r\n\r\nconst Contact = () => {\r\n  const [result, setResult] = useState(\"Send Message\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  // Exact coordinates for XOBO Delivery in Nairobi, Kenya\r\n  // These coordinates match the location provided in the Google Maps link\r\n  // const companyLocation = { lat: -1.2774535356180687, lng: 36.81300297571516 };\r\n\r\n  // Handle smooth scrolling for anchor links\r\n  const handleAnchorClick = (e, targetId) => {\r\n    e.preventDefault();\r\n    const element = document.getElementById(targetId);\r\n    if (element) {\r\n      element.scrollIntoView({ \r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    }\r\n  };\r\n\r\n  // Scroll to top when component mounts (additional safety)\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  const validateForm = (formData) => {\r\n    const formObject = {\r\n      firstName: formData.get(\"First Name\"),\r\n      lastName: formData.get(\"Last Name\"),\r\n      email: formData.get(\"email\"),\r\n      phone: phone,\r\n      message: formData.get(\"message\")\r\n    };\r\n\r\n    // Check for security threats in inputs\r\n    const inputs = Object.values(formObject);\r\n    const hasThreats = inputs.some(input => SecurityUtils.containsSecurityThreats(input));\r\n    \r\n    if (hasThreats) {\r\n      SecurityUtils.logSecurityEvent('Potential XSS attempt in contact form', formObject);\r\n      setErrors({ general: 'Invalid input detected. Please check your data.' });\r\n      return false;\r\n    }\r\n\r\n    // Use security utility for validation\r\n    const validation = SecurityUtils.validateFormData(formObject);\r\n    setErrors(validation.errors);\r\n    return validation.isValid;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check rate limiting first\r\n    if (SecurityUtils.isRateLimited('formSubmission')) {\r\n      setResult(\"Please wait before submitting again\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(event.target);\r\n    const selectedOption = document.getElementById(\"form-selection\").value;\r\n    \r\n    // Check if user has selected an option\r\n    if (!selectedOption || selectedOption === \"\") {\r\n      setErrors({ ...errors, selection: \"Please select how we can help you\" });\r\n      setResult(\"Please correct the errors below\");\r\n      return;\r\n    }\r\n    \r\n    formData.append(\"Form-Selection\", selectedOption);\r\n\r\n    if (validateForm(formData)) {\r\n      setResult(\"Sending....\");\r\n      \r\n      // Use configuration constants\r\n      formData.append(\"access_key\", API_CONFIG.web3FormsAccessKey);\r\n      formData.append(\"phone\", phone);\r\n\r\n      // Add security measures\r\n      formData.append(\"csrf_token\", SecurityUtils.generateCSRFToken());\r\n      formData.append(\"botcheck\", \"\"); // Honeypot field\r\n      formData.append(\"timestamp\", Date.now().toString());\r\n\r\n      try {\r\n        const res = await fetch(API_CONFIG.web3FormsEndpoint, {\r\n          method: \"POST\",\r\n          body: formData,\r\n          headers: {\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n          }\r\n        }).then((res) => res.json());\r\n\r\n        if (res.success) {\r\n          logger.success(\"Message sent successfully\", res);\r\n          setResult(\"Message Sent Successfully!\");\r\n\r\n          // Scroll to top to show success message\r\n          setTimeout(() => {\r\n            scrollToTop('smooth');\r\n          }, 500);\r\n\r\n          setTimeout(() => {\r\n            event.target.reset();\r\n            setPhone(\"\");\r\n            setResult(\"Send Message\");\r\n            setErrors({});\r\n            // Reset the dropdown to default\r\n            document.getElementById(\"form-selection\").value = \"\";\r\n          }, 3000);\r\n        } else {\r\n          logger.error(\"Message sending failed\", res);\r\n          setResult(res.message || \"An error occurred\");\r\n        }\r\n      } catch (error) {\r\n        logger.error(\"Submission error:\", error);\r\n        setResult(\"Failed to send message. Please try again.\");\r\n        SecurityUtils.logSecurityEvent('Form submission error', { error: error.message });\r\n      }\r\n    } else {\r\n      setResult(\"Please correct the errors below\");\r\n    }\r\n  };\r\n\r\n  const contactBenefits = [\r\n    {\r\n      icon: <FaCheck />,\r\n      title: \"Quick Response\",\r\n      description: \"Response within 24 hours\"\r\n    },\r\n    {\r\n      icon: <FaClock />,\r\n      title: \"24/7 Support\",\r\n      description: \"Available around the clock\"\r\n    },\r\n    {\r\n      icon: <FaShieldAlt />,\r\n      title: \"Secure Communication\",\r\n      description: \"End-to-end encryption\"\r\n    }\r\n  ];\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"contact-page\">\r\n      {/* Hero Section */}\r\n      <section className=\"contact-hero\">\r\n        <div className=\"container\">\r\n          <div className=\"contact-hero-content\">\r\n            <h1>Get in Touch</h1>\r\n            <p>Questions or need help? We're here for you!</p>\r\n            <div className=\"contact-hero-buttons\">\r\n              <a href=\"tel:+254799396000\" className=\"hero-button primary\">\r\n                <FaPhone className=\"button-icon\" /> Call Us\r\n              </a>\r\n              <button \r\n                onClick={(e) => handleAnchorClick(e, 'contact-form')} \r\n                onTouchEnd={(e) => {\r\n                  e.preventDefault();\r\n                  handleAnchorClick(e, 'contact-form');\r\n                }}\r\n                className=\"hero-button secondary\"\r\n                type=\"button\"\r\n              >\r\n                <FaEnvelope className=\"button-icon\" /> Message\r\n              </button>\r\n            </div>\r\n            <div className=\"hero-stats\">\r\n              <div className=\"stat\">\r\n                <strong>24h</strong>\r\n                <span>Response Time</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <strong>24/7</strong>\r\n                <span>Support</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <strong>99%</strong>\r\n                <span>Satisfaction</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Benefits Section */}\r\n      <section className=\"benefits-section\">\r\n        <div className=\"container\">\r\n          <div className=\"benefits-grid\">\r\n            {contactBenefits.map((benefit, index) => (\r\n              <div className=\"benefit-card\" key={index}>\r\n                <div className=\"benefit-icon\">{benefit.icon}</div>\r\n                <h3>{benefit.title}</h3>\r\n                <p>{benefit.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Contact Section */}\r\n      <section className=\"contact-section\" id=\"contact-form\">\r\n        <div className=\"container\">\r\n          <div className=\"section-intro\">\r\n            <span className=\"section-tag\">Contact Us</span>\r\n            <h2 className=\"section-title\">Let's Connect</h2>\r\n            <p className=\"section-subtitle\">\r\n              Here to help with questions or feedback\r\n            </p>\r\n          </div>\r\n          <div className=\"contact-grid\">\r\n            {/* Contact Information */}\r\n            <div className=\"contact-info\" id=\"contact-info\">\r\n              <h2>Contact Information</h2>\r\n              <p>Reach out through any of these channels</p>\r\n              \r\n              <div className=\"contact-methods\">\r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaPhone />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Call Us</h3>\r\n                    <a href=\"tel:+254799396000\">+254 799 / 739 396 000</a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\" id=\"email-contact\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaEnvelope />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Email Us</h3>\r\n                    <a href=\"mailto:info@xobo.co.ke\">info@xobo.co.ke</a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaWhatsapp />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>WhatsApp</h3>\r\n                    <a \r\n                      href=\"https://api.whatsapp.com/send?phone=254799396000\" \r\n                      target=\"_blank\" \r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      +254 799 / 739 396 000\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaMapMarkerAlt />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Visit Us</h3>\r\n                    <p>Nairobi, Kenya</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Operating Hours */}\r\n              <div className=\"operating-hours\">\r\n                <h3>Operating Hours</h3>\r\n                <ul>\r\n                  <li><span>Monday - Friday:</span> 8:00 AM - 8:00 PM</li>\r\n                  <li><span>Saturday:</span> 9:00 AM - 1:00 PM</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Contact Form */}\r\n            <div className=\"contact-form-container\">\r\n              <div className=\"form-header\">\r\n                <h2>Send Us a Message</h2>\r\n                <p>We'll get back to you as soon as possible</p>\r\n              </div>\r\n              \r\n              <form onSubmit={onSubmit}>\r\n                <input type=\"hidden\" name=\"subject\" value=\"New Message from XOBO Website\" />\r\n\r\n                {errors.general && (\r\n                  <div className=\"error-message general-error\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-selection\">How can we help?</label>\r\n                  <select \r\n                    name=\"Form-Selection\" \r\n                    id=\"form-selection\" \r\n                    defaultValue=\"\"\r\n                    style={{ borderColor: errors.selection ? \"var(--accent-color)\" : \"\" }}\r\n                    onChange={() => {\r\n                      if (errors.selection) {\r\n                        setErrors({ ...errors, selection: null });\r\n                      }\r\n                    }}\r\n                  >\r\n                    <option value=\"\" disabled>-Select-</option>\r\n                    <option value=\"Customer Care\">Customer Care</option>\r\n                    <option value=\"Delivery Partner\">Delivery Partner</option>\r\n                    <option value=\"Get a Quote\">Get a Quote</option>\r\n                  </select>\r\n                  {errors.selection && (\r\n                    <p className=\"error-message\">{errors.selection}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">\r\n                      <FaUser className=\"input-icon\" /> First Name\r\n                    </label>\r\n                    <input\r\n                      id=\"firstName\"\r\n                      placeholder=\"First Name\"\r\n                      type=\"text\"\r\n                      name=\"First Name\"\r\n                      style={{ borderColor: errors.firstName ? \"var(--accent-color)\" : \"\" }}\r\n                    />\r\n                    {errors.firstName && (\r\n                      <p className=\"error-message\">{errors.firstName}</p>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">\r\n                      <FaUser className=\"input-icon\" /> Last Name\r\n                    </label>\r\n                    <input\r\n                      id=\"lastName\"\r\n                      placeholder=\"Last Name\"\r\n                      type=\"text\"\r\n                      name=\"Last Name\"\r\n                      style={{ borderColor: errors.lastName ? \"var(--accent-color)\" : \"\" }}\r\n                    />\r\n                    {errors.lastName && (\r\n                      <p className=\"error-message\">{errors.lastName}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phoneNumber\">\r\n                    <FaPhone className=\"input-icon\" /> Phone Number\r\n                  </label>\r\n                  <PhoneInput\r\n                    className=\"phone-input\"\r\n                    country={\"ke\"}\r\n                    id=\"phoneNumber\"\r\n                    onlyCountries={[\"ke\"]}\r\n                    placeholder=\"+254 712 345 678\"\r\n                    value={phone}\r\n                    onChange={setPhone}\r\n                    inputStyle={{\r\n                      borderColor: errors.phone ? \"var(--accent-color)\" : \"\",\r\n                      width: \"100%\",\r\n                      height: \"48px\",\r\n                    }}\r\n                    buttonStyle={{\r\n                      border: \"none\",\r\n                      background: \"transparent\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.phone && (\r\n                    <p className=\"error-message\">{errors.phone}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">\r\n                    <FaEnvelope className=\"input-icon\" /> Email\r\n                  </label>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    style={{ borderColor: errors.email ? \"var(--accent-color)\" : \"\" }}\r\n                  />\r\n                  {errors.email && (\r\n                    <p className=\"error-message\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group message-group\">\r\n                  <label htmlFor=\"message\">\r\n                    <FaComments className=\"input-icon\" /> Message\r\n                  </label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    placeholder=\"Type your message here...\"\r\n                    name=\"message\"\r\n                    rows=\"5\"\r\n                    style={{ borderColor: errors.message ? \"var(--accent-color)\" : \"\" }}\r\n                  ></textarea>\r\n                  {errors.message && (\r\n                    <p className=\"error-message\">{errors.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-button\">{result}</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n\r\n\r\n      {/* Location Section */}\r\n      <section className=\"location-section\">\r\n        <div className=\"container\">\r\n          <div className=\"section-intro\">\r\n            <span className=\"section-tag\">LOCATION</span>\r\n            <h2 className=\"section-title\">Find Us</h2>\r\n            <p className=\"section-subtitle\">\r\n              Located in Nairobi, Kenya\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"map-container\">\r\n            <iframe\r\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d4762.7006173560185!2d36.81300297571516!3d-1.2774535356180687!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x182f17c6027f0003%3A0xe2f13d478848ccc1!2sXobo%20Delivery%20Limited!5e1!3m2!1sen!2ske!4v1750083195590!5m2!1sen!2ske\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              style={{ border: 0 }}\r\n              allowFullScreen=\"\"\r\n              loading=\"lazy\"\r\n              referrerPolicy=\"no-referrer-when-downgrade\"\r\n              title=\"XOBO Delivery Office Location\"\r\n            ></iframe>\r\n          </div>\r\n          \r\n          <div className=\"location-info\">\r\n            <p>Our office is at the marker shown on the map</p>\r\n            <a \r\n              href=\"https://www.google.com/maps/place/Xobo+Delivery+Limited/@-1.2774535,36.8130030,17z/data=!3m1!4b1!4m6!3m5!1s0x182f17c6027f0003:0xe2f13d478848ccc1!8m2!3d-1.2774535!4d36.8155779!16s%2Fg%2F11qr9w8_6x?entry=ttu&g_ep=EgoyMDI1MDEwMi4wIKXMDSoASAFQAw%3D%3D\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"map-link\"\r\n            >\r\n              <FaMapMarkerAlt /> Open in Google Maps\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"cta-section\">\r\n        <div className=\"container\">\r\n          <div className=\"cta-content\">\r\n            <h2>Ready to Get Started?</h2>\r\n            <p>Contact us today for all your delivery needs</p>\r\n            <div className=\"cta-buttons\">\r\n              <a href=\"tel:+254799396000\" className=\"cta-primary\">\r\n                <FaPhone className=\"button-icon\" /> Call Now\r\n              </a>\r\n              <button \r\n                onClick={(e) => handleAnchorClick(e, 'contact-form')} \r\n                className=\"cta-secondary\"\r\n              >\r\n                <FaEnvelope className=\"button-icon\" /> Send Message\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","/**\r\n * Production-Safe Logger Utility\r\n * Provides environment-aware logging to prevent console output in production\r\n */\r\n\r\nconst isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\nconst logger = {\r\n  // Error logging - always enabled for debugging\r\n  error: (message, ...args) => {\r\n    if (isDevelopment) {\r\n      console.error('🔴 [ERROR]', message, ...args);\r\n    } else {\r\n      // In production, could send to error reporting service\r\n      // Example: sendToErrorService(message, args);\r\n    }\r\n  },\r\n\r\n  // Warning logging - development only\r\n  warn: (message, ...args) => {\r\n    if (isDevelopment) {\r\n      console.warn('🟡 [WARN]', message, ...args);\r\n    }\r\n  },\r\n\r\n  // Info logging - development only\r\n  log: (message, ...args) => {\r\n    if (isDevelopment) {\r\n      console.log('ℹ️ [INFO]', message, ...args);\r\n    }\r\n  },\r\n\r\n  // Debug logging - development only\r\n  debug: (message, ...args) => {\r\n    if (isDevelopment) {\r\n      console.debug('🔍 [DEBUG]', message, ...args);\r\n    }\r\n  },\r\n\r\n  // Success logging - development only\r\n  success: (message, ...args) => {\r\n    if (isDevelopment) {\r\n      console.log('✅ [SUCCESS]', message, ...args);\r\n    }\r\n  },\r\n\r\n  // Performance logging\r\n  time: (label) => {\r\n    if (isDevelopment) {\r\n      console.time(`⏱️ [PERF] ${label}`);\r\n    }\r\n  },\r\n\r\n  timeEnd: (label) => {\r\n    if (isDevelopment) {\r\n      console.timeEnd(`⏱️ [PERF] ${label}`);\r\n    }\r\n  },\r\n\r\n  // Group logging for better organization\r\n  group: (label) => {\r\n    if (isDevelopment) {\r\n      console.group(`📁 ${label}`);\r\n    }\r\n  },\r\n\r\n  groupEnd: () => {\r\n    if (isDevelopment) {\r\n      console.groupEnd();\r\n    }\r\n  },\r\n\r\n  // Network logging\r\n  network: (method, url, response) => {\r\n    if (isDevelopment) {\r\n      console.log(`🌐 [NETWORK] ${method} ${url}`, response);\r\n    }\r\n  },\r\n\r\n  // Component lifecycle logging\r\n  component: (componentName, action, data) => {\r\n    if (isDevelopment) {\r\n      console.log(`⚛️ [COMPONENT] ${componentName} - ${action}`, data);\r\n    }\r\n  }\r\n};\r\n\r\n// Export individual methods for convenience\r\nexport const { error, warn, log, debug, success, time, timeEnd, group, groupEnd, network, component } = logger;\r\n\r\n// Export default logger\r\nexport default logger; "],"names":["concat","phone","process","REACT_APP_COMPANY_PHONE","email","REACT_APP_COMPANY_EMAIL","whatsapp","REACT_APP_WHATSAPP_NUMBER","address","street","city","country","coordinates","lat","lng","API_CONFIG","googleMapsApiKey","REACT_APP_GOOGLE_MAPS_API_KEY","web3FormsAccessKey","REACT_APP_WEB3FORMS_ACCESS_KEY","web3FormsEndpoint","VALIDATION_RULES","minLength","maxLength","pattern","name","message","RATE_LIMITS","formSubmission","apiCalls","BREAKPOINTS","validateEmail","test","trim","validatePhone","cleanPhone","replace","length","validateName","trimmedName","validateMessage","trimmedMessage","sanitizeInput","input","validateFormData","formData","errors","firstName","lastName","isValid","Object","keys","isRateLimited","action","identifier","arguments","undefined","key","now","Date","lastActionTime","localStorage","getItem","setItem","toString","parseInt","generateCSRFToken","Math","random","substring","isSecureConnection","window","location","protocol","hostname","logSecurityEvent","event","containsSecurityThreats","some","threat","Contact","result","setResult","useState","setPhone","setErrors","handleAnchorClick","e","targetId","preventDefault","element","document","getElementById","scrollIntoView","behavior","block","useEffect","scrollToTop","contactBenefits","icon","_jsx","FaCheck","title","description","FaClock","FaShieldAlt","_jsxs","className","children","href","FaPhone","onClick","onTouchEnd","type","FaEnvelope","map","benefit","index","id","FaWhatsapp","target","rel","FaMapMarkerAlt","onSubmit","async","SecurityUtils","FormData","selectedOption","value","_objectSpread","selection","append","formObject","get","values","general","validation","validateForm","res","fetch","method","body","headers","then","json","success","logger","setTimeout","reset","error","htmlFor","defaultValue","style","borderColor","onChange","disabled","FaUser","placeholder","PhoneInput","onlyCountries","inputStyle","width","height","buttonStyle","border","background","required","FaComments","rows","src","allowFullScreen","loading","referrerPolicy","isDevelopment","warn","log","debug","time","label","timeEnd","group","groupEnd","network","url","response","component","componentName","data"],"sourceRoot":""}