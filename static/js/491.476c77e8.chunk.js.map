{"version":3,"file":"static/js/491.476c77e8.chunk.js","mappings":"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","sources":["utils/security.js","components/contact/Contact.jsx"],"sourcesContent":["// Security utility functions for input validation and sanitization\r\n\r\nimport { VALIDATION_RULES, RATE_LIMITS } from '../config/constants';\r\n\r\n/**\r\n * Sanitize HTML input to prevent XSS attacks\r\n * @param {string} input - The input string to sanitize\r\n * @returns {string} - Sanitized string\r\n */\r\nexport const sanitizeInput = (input) => {\r\n  if (typeof input !== 'string') return '';\r\n  \r\n  return input\r\n    .replace(/&/g, '&amp;')\r\n    .replace(/</g, '&lt;')\r\n    .replace(/>/g, '&gt;')\r\n    .replace(/\"/g, '&quot;')\r\n    .replace(/'/g, '&#x27;')\r\n    .replace(/\\//g, '&#x2F;');\r\n};\r\n\r\n/**\r\n * Validate email format\r\n * @param {string} email - Email to validate\r\n * @returns {boolean} - Whether email is valid\r\n */\r\nexport const validateEmail = (email) => {\r\n  if (!email || typeof email !== 'string') return false;\r\n  return VALIDATION_RULES.email.pattern.test(email.trim());\r\n};\r\n\r\n/**\r\n * Validate phone number format\r\n * @param {string} phone - Phone number to validate\r\n * @returns {boolean} - Whether phone is valid\r\n */\r\nexport const validatePhone = (phone) => {\r\n  if (!phone || typeof phone !== 'string') return false;\r\n  const cleanPhone = phone.replace(/\\D/g, '');\r\n  return cleanPhone.length >= VALIDATION_RULES.phone.minLength && \r\n         cleanPhone.length <= VALIDATION_RULES.phone.maxLength;\r\n};\r\n\r\n/**\r\n * Validate name format\r\n * @param {string} name - Name to validate\r\n * @returns {boolean} - Whether name is valid\r\n */\r\nexport const validateName = (name) => {\r\n  if (!name || typeof name !== 'string') return false;\r\n  const trimmedName = name.trim();\r\n  return trimmedName.length >= VALIDATION_RULES.name.minLength && \r\n         trimmedName.length <= VALIDATION_RULES.name.maxLength;\r\n};\r\n\r\n/**\r\n * Validate message format\r\n * @param {string} message - Message to validate\r\n * @returns {boolean} - Whether message is valid\r\n */\r\nexport const validateMessage = (message) => {\r\n  if (!message || typeof message !== 'string') return false;\r\n  const trimmedMessage = message.trim();\r\n  return trimmedMessage.length >= VALIDATION_RULES.message.minLength && \r\n         trimmedMessage.length <= VALIDATION_RULES.message.maxLength;\r\n};\r\n\r\n/**\r\n * Check if action is rate limited\r\n * @param {string} action - Action type (e.g., 'formSubmission', 'apiCall')\r\n * @param {string} identifier - Unique identifier (e.g., IP, user ID)\r\n * @returns {boolean} - Whether action is rate limited\r\n */\r\nexport const isRateLimited = (action, identifier = 'default') => {\r\n  const key = `${action}_${identifier}`;\r\n  const now = Date.now();\r\n  const lastActionTime = localStorage.getItem(key);\r\n  \r\n  if (!lastActionTime) {\r\n    localStorage.setItem(key, now.toString());\r\n    return false;\r\n  }\r\n  \r\n  const timeDiff = now - parseInt(lastActionTime);\r\n  const rateLimit = RATE_LIMITS[action] || 1000;\r\n  \r\n  if (timeDiff < rateLimit) {\r\n    return true;\r\n  }\r\n  \r\n  localStorage.setItem(key, now.toString());\r\n  return false;\r\n};\r\n\r\n/**\r\n * Generate a simple CSRF token\r\n * @returns {string} - CSRF token\r\n */\r\nexport const generateCSRFToken = () => {\r\n  return Math.random().toString(36).substring(2, 15) + \r\n         Math.random().toString(36).substring(2, 15);\r\n};\r\n\r\n/**\r\n * Validate form data comprehensively\r\n * @param {Object} formData - Form data object\r\n * @returns {Object} - Validation result with errors\r\n */\r\nexport const validateFormData = (formData) => {\r\n  const errors = {};\r\n  \r\n  // Validate first name\r\n  if (!validateName(formData.firstName)) {\r\n    errors.firstName = 'First name must be between 2 and 50 characters';\r\n  }\r\n  \r\n  // Validate last name\r\n  if (!validateName(formData.lastName)) {\r\n    errors.lastName = 'Last name must be between 2 and 50 characters';\r\n  }\r\n  \r\n  // Validate email\r\n  if (!validateEmail(formData.email)) {\r\n    errors.email = 'Please enter a valid email address';\r\n  }\r\n  \r\n  // Validate phone\r\n  if (!validatePhone(formData.phone)) {\r\n    errors.phone = 'Phone number should be between 10 and 12 digits';\r\n  }\r\n  \r\n  // Validate message\r\n  if (!validateMessage(formData.message)) {\r\n    errors.message = 'Message must be between 10 and 1000 characters';\r\n  }\r\n  \r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\n/**\r\n * Check if current environment is secure (HTTPS)\r\n * @returns {boolean} - Whether connection is secure\r\n */\r\nexport const isSecureConnection = () => {\r\n  return window.location.protocol === 'https:' || \r\n         window.location.hostname === 'localhost' ||\r\n         window.location.hostname === '127.0.0.1';\r\n};\r\n\r\n/**\r\n * Log security events for monitoring\r\n * @param {string} event - Event type\r\n * @param {Object} details - Event details\r\n */\r\nexport const logSecurityEvent = (event, details = {}) => {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.warn('Security Event:', event, details);\r\n  }\r\n  \r\n  // In production, this would send to a security monitoring service\r\n  // Example: sendToSecurityService({ event, details, timestamp: Date.now() });\r\n};\r\n\r\n/**\r\n * Check for potential security threats in input\r\n * @param {string} input - Input to check\r\n * @returns {boolean} - Whether input contains potential threats\r\n */\r\nexport const containsSecurityThreats = (input) => {\r\n  if (!input || typeof input !== 'string') return false;\r\n  \r\n  const threats = [\r\n    /<script/i,\r\n    /javascript:/i,\r\n    /on\\w+\\s*=/i,\r\n    /<iframe/i,\r\n    /<object/i,\r\n    /<embed/i,\r\n    /eval\\s*\\(/i,\r\n    /expression\\s*\\(/i\r\n  ];\r\n  \r\n  return threats.some(threat => threat.test(input));\r\n};\r\n\r\nexport default {\r\n  sanitizeInput,\r\n  validateEmail,\r\n  validatePhone,\r\n  validateName,\r\n  validateMessage,\r\n  validateFormData,\r\n  isRateLimited,\r\n  generateCSRFToken,\r\n  isSecureConnection,\r\n  logSecurityEvent,\r\n  containsSecurityThreats\r\n}; ","import React, { useState, useEffect } from \"react\";\r\nimport PhoneInput from \"react-phone-input-2\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { \r\n  FaPhone, \r\n  FaEnvelope, \r\n  FaWhatsapp, \r\n  FaMapMarkerAlt, \r\n  FaUser, \r\n  FaComments, \r\n  FaCheck, \r\n  FaClock, \r\n  FaShieldAlt, \r\n  FaStar \r\n} from 'react-icons/fa';\r\nimport { scrollToTop } from '../common/ScrollToTop';\r\nimport SecurityUtils from '../../utils/security';\r\nimport { API_CONFIG, CONTACT_INFO } from '../../config/constants';\r\nimport \"./contact.css\";\r\n\r\nconst Contact = () => {\r\n  const [result, setResult] = useState(\"Send Message\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  \r\n  // Exact coordinates for XOBO Delivery in Nairobi, Kenya\r\n  // These coordinates match the location provided in the Google Maps link\r\n  const companyLocation = { lat: -1.2774535356180687, lng: 36.81300297571516 };\r\n\r\n  // Handle smooth scrolling for anchor links\r\n  const handleAnchorClick = (e, targetId) => {\r\n    e.preventDefault();\r\n    const element = document.getElementById(targetId);\r\n    if (element) {\r\n      element.scrollIntoView({ \r\n        behavior: 'smooth',\r\n        block: 'start'\r\n      });\r\n    }\r\n  };\r\n\r\n  // Scroll to top when component mounts (additional safety)\r\n  useEffect(() => {\r\n    scrollToTop();\r\n  }, []);\r\n\r\n  const validateForm = (formData) => {\r\n    const formObject = {\r\n      firstName: formData.get(\"First Name\"),\r\n      lastName: formData.get(\"Last Name\"),\r\n      email: formData.get(\"email\"),\r\n      phone: phone,\r\n      message: formData.get(\"message\")\r\n    };\r\n\r\n    // Check for security threats in inputs\r\n    const inputs = Object.values(formObject);\r\n    const hasThreats = inputs.some(input => SecurityUtils.containsSecurityThreats(input));\r\n    \r\n    if (hasThreats) {\r\n      SecurityUtils.logSecurityEvent('Potential XSS attempt in contact form', formObject);\r\n      setErrors({ general: 'Invalid input detected. Please check your data.' });\r\n      return false;\r\n    }\r\n\r\n    // Use security utility for validation\r\n    const validation = SecurityUtils.validateFormData(formObject);\r\n    setErrors(validation.errors);\r\n    return validation.isValid;\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check rate limiting first\r\n    if (SecurityUtils.isRateLimited('formSubmission')) {\r\n      setResult(\"Please wait before submitting again\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData(event.target);\r\n    const selectedOption = document.getElementById(\"form-selection\").value;\r\n    formData.append(\"Form-Selection\", selectedOption);\r\n\r\n    if (validateForm(formData)) {\r\n      setResult(\"Sending....\");\r\n      \r\n      // Use configuration constants\r\n      formData.append(\"access_key\", API_CONFIG.web3FormsAccessKey);\r\n      formData.append(\"phone\", phone);\r\n\r\n      // Add security measures\r\n      formData.append(\"csrf_token\", SecurityUtils.generateCSRFToken());\r\n      formData.append(\"botcheck\", \"\"); // Honeypot field\r\n      formData.append(\"timestamp\", Date.now().toString());\r\n\r\n      try {\r\n        const res = await fetch(API_CONFIG.web3FormsEndpoint, {\r\n          method: \"POST\",\r\n          body: formData,\r\n          headers: {\r\n            'X-Requested-With': 'XMLHttpRequest'\r\n          }\r\n        }).then((res) => res.json());\r\n\r\n        if (res.success) {\r\n          console.log(\"Success\", res);\r\n          setResult(\"Message Sent Successfully!\");\r\n\r\n          // Scroll to top to show success message\r\n          setTimeout(() => {\r\n            scrollToTop('smooth');\r\n          }, 500);\r\n\r\n          setTimeout(() => {\r\n            event.target.reset();\r\n            setPhone(\"\");\r\n            setResult(\"Send Message\");\r\n            setErrors({});\r\n          }, 3000);\r\n        } else {\r\n          console.log(\"Error\", res);\r\n          setResult(res.message || \"An error occurred\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Submission error:\", error);\r\n        setResult(\"Failed to send message. Please try again.\");\r\n        SecurityUtils.logSecurityEvent('Form submission error', { error: error.message });\r\n      }\r\n    } else {\r\n      setResult(\"Please correct the errors below\");\r\n    }\r\n  };\r\n\r\n  const contactBenefits = [\r\n    {\r\n      icon: <FaCheck />,\r\n      title: \"Quick Response\",\r\n      description: \"Response within 24 hours\"\r\n    },\r\n    {\r\n      icon: <FaClock />,\r\n      title: \"24/7 Support\",\r\n      description: \"Available around the clock\"\r\n    },\r\n    {\r\n      icon: <FaShieldAlt />,\r\n      title: \"Secure Communication\",\r\n      description: \"End-to-end encryption\"\r\n    }\r\n  ];\r\n\r\n  const testimonials = [\r\n    {\r\n      name: \"Jane Doe\",\r\n      position: \"Business Owner\",\r\n      quote: \"XOBO team was incredibly responsive. Their support helped set up my delivery account quickly!\",\r\n      rating: 5\r\n    },\r\n    {\r\n      name: \"John Smith\",\r\n      position: \"Restaurant Manager\",\r\n      quote: \"I received detailed information about their delivery service the same day I inquired.\",\r\n      rating: 5\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"contact-page\">\r\n      {/* Hero Section */}\r\n      <section className=\"contact-hero\">\r\n        <div className=\"container\">\r\n          <div className=\"contact-hero-content\">\r\n            <h1>Get in Touch</h1>\r\n            <p>Questions or need help? We're here for you!</p>\r\n            <div className=\"contact-hero-buttons\">\r\n              <a href=\"tel:+254799396000\" className=\"hero-button primary\">\r\n                <FaPhone className=\"button-icon\" /> Call Us\r\n              </a>\r\n              <button \r\n                onClick={(e) => handleAnchorClick(e, 'contact-form')} \r\n                className=\"hero-button secondary\"\r\n              >\r\n                <FaEnvelope className=\"button-icon\" /> Message\r\n              </button>\r\n            </div>\r\n            <div className=\"hero-stats\">\r\n              <div className=\"stat\">\r\n                <strong>24h</strong>\r\n                <span>Response Time</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <strong>24/7</strong>\r\n                <span>Support</span>\r\n              </div>\r\n              <div className=\"stat\">\r\n                <strong>99%</strong>\r\n                <span>Satisfaction</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Benefits Section */}\r\n      <section className=\"benefits-section\">\r\n        <div className=\"container\">\r\n          <div className=\"benefits-grid\">\r\n            {contactBenefits.map((benefit, index) => (\r\n              <div className=\"benefit-card\" key={index}>\r\n                <div className=\"benefit-icon\">{benefit.icon}</div>\r\n                <h3>{benefit.title}</h3>\r\n                <p>{benefit.description}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Contact Section */}\r\n      <section className=\"contact-section\" id=\"contact-form\">\r\n        <div className=\"container\">\r\n          <div className=\"section-intro\">\r\n            <span className=\"section-tag\">Contact Us</span>\r\n            <h2 className=\"section-title\">Let's Connect</h2>\r\n            <p className=\"section-subtitle\">\r\n              Here to help with questions or feedback\r\n            </p>\r\n          </div>\r\n          <div className=\"contact-grid\">\r\n            {/* Contact Information */}\r\n            <div className=\"contact-info\" id=\"contact-info\">\r\n              <h2>Contact Information</h2>\r\n              <p>Reach out through any of these channels</p>\r\n              \r\n              <div className=\"contact-methods\">\r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaPhone />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Call Us</h3>\r\n                    <a href=\"tel:+254799396000\">+254 799 / 739 396 000</a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\" id=\"email-contact\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaEnvelope />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Email Us</h3>\r\n                    <a href=\"mailto:info@xobo.co.ke\">info@xobo.co.ke</a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaWhatsapp />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>WhatsApp</h3>\r\n                    <a \r\n                      href=\"https://api.whatsapp.com/send?phone=254799396000\" \r\n                      target=\"_blank\" \r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      +254 799 / 739 396 000\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"contact-method\">\r\n                  <div className=\"contact-icon\">\r\n                    <FaMapMarkerAlt />\r\n                  </div>\r\n                  <div className=\"contact-details\">\r\n                    <h3>Visit Us</h3>\r\n                    <p>Nairobi, Kenya</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Operating Hours */}\r\n              <div className=\"operating-hours\">\r\n                <h3>Operating Hours</h3>\r\n                <ul>\r\n                  <li><span>Monday - Friday:</span> 8:00 AM - 8:00 PM</li>\r\n                  <li><span>Saturday:</span> 9:00 AM - 6:00 PM</li>\r\n                  <li><span>Sunday:</span> 10:00 AM - 4:00 PM</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Contact Form */}\r\n            <div className=\"contact-form-container\">\r\n              <div className=\"form-header\">\r\n                <h2>Send Us a Message</h2>\r\n                <p>We'll get back to you as soon as possible</p>\r\n              </div>\r\n              \r\n              <form onSubmit={onSubmit}>\r\n                <input type=\"hidden\" name=\"subject\" value=\"New Message from XOBO Website\" />\r\n\r\n                {errors.general && (\r\n                  <div className=\"error-message general-error\">\r\n                    {errors.general}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"form-selection\">How can we help?</label>\r\n                  <select name=\"Form-Selection\" id=\"form-selection\">\r\n                    <option value=\"Customer Care\">Customer Care</option>\r\n                    <option value=\"Delivery Partner\">Delivery Partner</option>\r\n                    <option value=\"Get a Quote\">Get a Quote</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-row\">\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"firstName\">\r\n                      <FaUser className=\"input-icon\" /> First Name\r\n                    </label>\r\n                    <input\r\n                      id=\"firstName\"\r\n                      placeholder=\"First Name\"\r\n                      type=\"text\"\r\n                      name=\"First Name\"\r\n                      style={{ borderColor: errors.firstName ? \"var(--accent-color)\" : \"\" }}\r\n                    />\r\n                    {errors.firstName && (\r\n                      <p className=\"error-message\">{errors.firstName}</p>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"lastName\">\r\n                      <FaUser className=\"input-icon\" /> Last Name\r\n                    </label>\r\n                    <input\r\n                      id=\"lastName\"\r\n                      placeholder=\"Last Name\"\r\n                      type=\"text\"\r\n                      name=\"Last Name\"\r\n                      style={{ borderColor: errors.lastName ? \"var(--accent-color)\" : \"\" }}\r\n                    />\r\n                    {errors.lastName && (\r\n                      <p className=\"error-message\">{errors.lastName}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"phoneNumber\">\r\n                    <FaPhone className=\"input-icon\" /> Phone Number\r\n                  </label>\r\n                  <PhoneInput\r\n                    className=\"phone-input\"\r\n                    country={\"ke\"}\r\n                    id=\"phoneNumber\"\r\n                    onlyCountries={[\"ke\"]}\r\n                    placeholder=\"+254 712 345 678\"\r\n                    value={phone}\r\n                    onChange={setPhone}\r\n                    inputStyle={{\r\n                      borderColor: errors.phone ? \"var(--accent-color)\" : \"\",\r\n                      width: \"100%\",\r\n                      height: \"48px\",\r\n                    }}\r\n                    buttonStyle={{\r\n                      border: \"none\",\r\n                      background: \"transparent\",\r\n                    }}\r\n                    required\r\n                  />\r\n                  {errors.phone && (\r\n                    <p className=\"error-message\">{errors.phone}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">\r\n                    <FaEnvelope className=\"input-icon\" /> Email\r\n                  </label>\r\n                  <input\r\n                    id=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    style={{ borderColor: errors.email ? \"var(--accent-color)\" : \"\" }}\r\n                  />\r\n                  {errors.email && (\r\n                    <p className=\"error-message\">{errors.email}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group message-group\">\r\n                  <label htmlFor=\"message\">\r\n                    <FaComments className=\"input-icon\" /> Message\r\n                  </label>\r\n                  <textarea\r\n                    id=\"message\"\r\n                    placeholder=\"Type your message here...\"\r\n                    name=\"message\"\r\n                    rows=\"5\"\r\n                    style={{ borderColor: errors.message ? \"var(--accent-color)\" : \"\" }}\r\n                  ></textarea>\r\n                  {errors.message && (\r\n                    <p className=\"error-message\">{errors.message}</p>\r\n                  )}\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"submit-button\">{result}</button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Testimonial Section */}\r\n      <section className=\"testimonial-section\">\r\n        <div className=\"container\">\r\n          <div className=\"section-intro\">\r\n            <span className=\"section-tag\">Testimonials</span>\r\n            <h2 className=\"section-title\">What Our Customers Say</h2>\r\n            <p className=\"section-subtitle\">Feedback from our satisfied clients</p>\r\n          </div>\r\n          \r\n          <div className=\"testimonial-grid\">\r\n            {testimonials.map((testimonial, index) => (\r\n              <div className=\"testimonial-card\" key={index}>\r\n                <div className=\"testimonial-content\">\r\n                  <div className=\"testimonial-rating\">\r\n                    {[...Array(testimonial.rating)].map((_, i) => (\r\n                      <FaStar key={i} />\r\n                    ))}\r\n                  </div>\r\n                  <p className=\"testimonial-quote\">\"{testimonial.quote}\"</p>\r\n                  <div className=\"testimonial-author\">\r\n                    <div className=\"author-avatar\">\r\n                      {testimonial.name.charAt(0)}\r\n                    </div>\r\n                    <div className=\"author-info\">\r\n                      <h4>{testimonial.name}</h4>\r\n                      <p>{testimonial.position}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Location Section */}\r\n      <section className=\"location-section\">\r\n        <div className=\"container\">\r\n          <div className=\"section-intro\">\r\n            <span className=\"section-tag\">LOCATION</span>\r\n            <h2 className=\"section-title\">Find Us</h2>\r\n            <p className=\"section-subtitle\">\r\n              Located in Nairobi, Kenya\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"map-container\">\r\n            <iframe\r\n              src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d4762.7006173560185!2d36.81300297571516!3d-1.2774535356180687!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x182f17c6027f0003%3A0xe2f13d478848ccc1!2sXobo%20Delivery%20Limited!5e1!3m2!1sen!2ske!4v1750083195590!5m2!1sen!2ske\"\r\n              width=\"100%\"\r\n              height=\"100%\"\r\n              style={{ border: 0 }}\r\n              allowFullScreen=\"\"\r\n              loading=\"lazy\"\r\n              referrerPolicy=\"no-referrer-when-downgrade\"\r\n              title=\"XOBO Delivery Office Location\"\r\n            ></iframe>\r\n          </div>\r\n          \r\n          <div className=\"location-info\">\r\n            <p>Our office is at the marker shown on the map</p>\r\n            <a \r\n              href=\"https://www.google.com/maps/place/Xobo+Delivery+Limited/@-1.2774535,36.8130030,17z/data=!3m1!4b1!4m6!3m5!1s0x182f17c6027f0003:0xe2f13d478848ccc1!8m2!3d-1.2774535!4d36.8155779!16s%2Fg%2F11qr9w8_6x?entry=ttu&g_ep=EgoyMDI1MDEwMi4wIKXMDSoASAFQAw%3D%3D\" \r\n              target=\"_blank\" \r\n              rel=\"noopener noreferrer\"\r\n              className=\"map-link\"\r\n            >\r\n              <FaMapMarkerAlt /> Open in Google Maps\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"cta-section\">\r\n        <div className=\"container\">\r\n          <div className=\"cta-content\">\r\n            <h2>Ready to Get Started?</h2>\r\n            <p>Contact us today for all your delivery needs</p>\r\n            <div className=\"cta-buttons\">\r\n              <a href=\"tel:+254799396000\" className=\"cta-primary\">\r\n                <FaPhone className=\"button-icon\" /> Call Now\r\n              </a>\r\n              <button \r\n                onClick={(e) => handleAnchorClick(e, 'contact-form')} \r\n                className=\"cta-secondary\"\r\n              >\r\n                <FaEnvelope className=\"button-icon\" /> Send Message\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n"],"names":["validateEmail","email","VALIDATION_RULES","pattern","test","trim","validatePhone","phone","cleanPhone","replace","length","minLength","maxLength","validateName","name","trimmedName","validateMessage","message","trimmedMessage","formData","errors","firstName","lastName","isValid","Object","keys","action","identifier","arguments","undefined","key","concat","now","Date","lastActionTime","localStorage","getItem","setItem","toString","parseInt","RATE_LIMITS","generateCSRFToken","Math","random","substring","event","input","some","threat","Contact","result","setResult","useState","setPhone","setErrors","handleAnchorClick","e","targetId","preventDefault","element","document","getElementById","scrollIntoView","behavior","block","useEffect","scrollToTop","contactBenefits","icon","_jsx","FaCheck","title","description","FaClock","FaShieldAlt","_jsxs","className","children","href","FaPhone","onClick","FaEnvelope","map","benefit","index","id","FaWhatsapp","target","rel","FaMapMarkerAlt","onSubmit","async","SecurityUtils","FormData","selectedOption","value","append","formObject","get","values","general","validation","validateForm","API_CONFIG","web3FormsAccessKey","res","fetch","web3FormsEndpoint","method","body","headers","then","json","success","console","log","setTimeout","reset","error","type","htmlFor","FaUser","placeholder","style","borderColor","PhoneInput","country","onlyCountries","onChange","inputStyle","width","height","buttonStyle","border","background","required","FaComments","rows","position","quote","rating","testimonial","Array","_","i","FaStar","charAt","src","allowFullScreen","loading","referrerPolicy"],"sourceRoot":""}